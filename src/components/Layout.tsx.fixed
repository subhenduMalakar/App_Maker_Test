import Link from "next/link";
import { useRouter } from "next/router";
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { 
  Heart, 
  Menu, 
  X, 
  Search, 
  Wand2,
  FileText,
  Presentation,
  Table,
  Mic,
  Image as ImageIcon,
  MessageCircle,
  Terminal,
  BookText 
} from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";
import { useAuth } from '../context/AuthContext';
import AIToolsMenu from './AIToolsMenu';
import { useToolsConfig } from '@/hooks/use-tools-config';

interface LayoutProps {
  children: React.ReactNode;
  hideHeader?: boolean;
  includeLayout?: boolean;
}

const Layout = ({ children, hideHeader = false }: LayoutProps) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const router = useRouter();
  const currentPath = router.pathname;
  const { user, supabase } = useAuth(); // Use the useAuth hook
  const [isToolsMenuOpen, setIsToolsMenuOpen] = useState(false);
  const { isToolEnabled, isSectionEnabled, isCategoryEnabled } = useToolsConfig();

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  const handleLogout = async () => {
    const { error } = await supabase.auth.signOut();
    if (error) {
      console.error('Logout error:', error.message);
    } else {
      router.push('/auth'); // Redirect to login page after logout
    }
  };
  
  const navItems = [
    { path: "/", label: "Home" },
    { path: "/about", label: "About" },
    // Templates replaced with AI Tools dropdown
    { path: "ai-tools-dropdown", label: "AI Tools", isDropdown: true },
    { path: "/blog", label: "Blog" },
  ];

  return (
    <div className="flex flex-col min-h-screen">
      {!hideHeader && (
        <nav className="bg-white shadow-sm py-4 z-50">
          <div className="container mx-auto px-4 flex justify-between items-center">
            <Link href="/" className="font-bold text-2xl text-blue-600">
              AI<span className="text-teal-500">Tools</span>Suite
            </Link>
            
            {/* Desktop Navigation */}
            <div className="hidden md:flex items-center space-x-6">
              {navItems.map((item, index) => {
                // Skip AI Tools dropdown if none of the sections are enabled
                if (item.isDropdown) {
                  if (!isSectionEnabled('aiTools') && !isSectionEnabled('freeAiTools')) {
                    return null;
                  }
                  return (
                    <div key={index} className="relative group">
                      <button 
                        className={`text-gray-700 font-medium hover:text-blue-600 flex items-center ${isToolsMenuOpen ? 'text-blue-600' : ''}`}
                        onClick={() => setIsToolsMenuOpen(!isToolsMenuOpen)}
                      >
                        <Wand2 className="mr-1 h-4 w-4" />{item.label}
                      </button>
                      
                      <AnimatePresence>
                        {isToolsMenuOpen && (
                          <motion.div 
                            initial={{ opacity: 0, y: -10 }}
                            animate={{ opacity: 1, y: 0 }}
                            exit={{ opacity: 0, y: -10 }}
                            transition={{ duration: 0.2 }}
                            className="absolute top-full left-0 bg-white shadow-lg rounded-md py-2 w-64 z-50"
                          >
                            <div className="px-4 py-2 border-b border-gray-100">
                              {/* Premium AI Tools Section - Only show if enabled */}
                              {isSectionEnabled('aiTools') && (
                                <div className="mb-3">
                                  <div className="font-medium text-sm text-blue-600 mb-2">Premium AI Tools</div>
                                  <ul className="space-y-1">
                                    {/* Document Tools - Only show if category is enabled */}
                                    {isCategoryEnabled('documentTools') && isToolEnabled('documents') && (
                                      <li>
                                        <Link 
                                          href="/tools/documents"
                                          className="flex items-center px-2 py-1 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 rounded"
                                          onClick={() => setIsToolsMenuOpen(false)}
                                        >
                                          <FileText className="mr-2 h-4 w-4 text-purple-500" />
                                          <span>Documents</span>
                                        </Link>
                                      </li>
                                    )}
                                    
                                    {/* Presentations - Only show if category is enabled */}
                                    {isCategoryEnabled('presentationVisual') && isToolEnabled('presentations') && (
                                      <li>
                                        <Link 
                                          href="/tools/presentations"
                                          className="flex items-center px-2 py-1 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 rounded"
                                          onClick={() => setIsToolsMenuOpen(false)}
                                        >
                                          <Presentation className="mr-2 h-4 w-4 text-blue-500" />
                                          <span>Presentations</span>
                                        </Link>
                                      </li>
                                    )}
                                    
                                    {/* Spreadsheets - Only show if category is enabled */}
                                    {isCategoryEnabled('dataCommunication') && isToolEnabled('spreadsheets') && (
                                      <li>
                                        <Link 
                                          href="/tools/spreadsheets"
                                          className="flex items-center px-2 py-1 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 rounded"
                                          onClick={() => setIsToolsMenuOpen(false)}
                                        >
                                          <Table className="mr-2 h-4 w-4 text-green-500" />
                                          <span>Spreadsheets</span>
                                        </Link>
                                      </li>
                                    )}
                                    
                                    {/* Voiceovers - Only show if category is enabled */}
                                    {isCategoryEnabled('dataCommunication') && isToolEnabled('voiceovers') && (
                                      <li>
                                        <Link 
                                          href="/tools/voiceovers"
                                          className="flex items-center px-2 py-1 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 rounded"
                                          onClick={() => setIsToolsMenuOpen(false)}
                                        >
                                          <Mic className="mr-2 h-4 w-4 text-cyan-500" />
                                          <span>Voiceovers</span>
                                        </Link>
                                      </li>
                                    )}
                                    
                                    {/* Images - Only show if category is enabled */}
                                    {isCategoryEnabled('presentationVisual') && isToolEnabled('images') && (
                                      <li>
                                        <Link 
                                          href="/tools/images"
                                          className="flex items-center px-2 py-1 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 rounded"
                                          onClick={() => setIsToolsMenuOpen(false)}
                                        >
                                          <ImageIcon className="mr-2 h-4 w-4 text-indigo-500" />
                                          <span>Images</span>
                                        </Link>
                                      </li>
                                    )}
                                    
                                    {/* Chat - Only show if category is enabled */}
                                    {isCategoryEnabled('dataCommunication') && isToolEnabled('chat') && (
                                      <li>
                                        <Link 
                                          href="/tools/chat"
                                          className="flex items-center px-2 py-1 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 rounded"
                                          onClick={() => setIsToolsMenuOpen(false)}
                                        >
                                          <MessageCircle className="mr-2 h-4 w-4 text-amber-500" />
                                          <span>Chat</span>
                                        </Link>
                                      </li>
                                    )}
                                    
                                    {/* Text Generator - Only show if category is enabled */}
                                    {isCategoryEnabled('documentTools') && isToolEnabled('ai-text-generator') && (
                                      <li>
                                        <Link 
                                          href="/tools/ai-text-generator"
                                          className="flex items-center px-2 py-1 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 rounded"
                                          onClick={() => setIsToolsMenuOpen(false)}
                                        >
                                          <Terminal className="mr-2 h-4 w-4 text-cyan-500" />
                                          <span>AI Text Generator</span>
                                        </Link>
                                      </li>
                                    )}
                                    
                                    {/* Story Generator - Only show if category is enabled */}
                                    {isCategoryEnabled('documentTools') && isToolEnabled('ai-story-generator') && (
                                      <li>
                                        <Link 
                                          href="/tools/ai-story-generator"
                                          className="flex items-center px-2 py-1 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 rounded"
                                          onClick={() => setIsToolsMenuOpen(false)}
                                        >
                                          <BookText className="mr-2 h-4 w-4 text-pink-500" />
                                          <span>AI Story Generator</span>
                                        </Link>
                                      </li>
                                    )}
                                  </ul>
                                </div>
                              )}
                              
                              {/* Free AI Tools Section - Only show if enabled */}
                              {isSectionEnabled('freeAiTools') && (
                                <div>
                                  <div className="font-medium text-sm text-teal-600 mb-2">Free AI Tools</div>
                                  <ul className="space-y-1">
                                    <li>
                                      <Link 
                                        href="/tools"
                                        className="flex items-center px-2 py-1 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 rounded"
                                        onClick={() => setIsToolsMenuOpen(false)}
                                      >
                                        <span>All Free AI Tools →</span>
                                      </Link>
                                    </li>
                                  </ul>
                                </div>
                              )}
                            </div>
                          </motion.div>
                        )}
                      </AnimatePresence>
                    </div>
                  );
                }
                
                // Regular navigation items
                return (
                  <Link 
                    key={index} 
                    href={item.path}
                    className={`text-gray-700 font-medium hover:text-blue-600 ${currentPath === item.path ? 'text-blue-600' : ''}`}
                  >
                    {item.label}
                  </Link>
                );
              })}
              
              {/* Auth buttons */}
              <div className="flex items-center space-x-3">
                {user ? (
                  <Button variant="ghost" onClick={handleLogout} className="text-gray-700 hover:text-blue-600">
                    Logout
                  </Button>
                ) : (
                  <Link href="/auth">
                    <Button variant="ghost" className="text-gray-700 hover:text-blue-600">
                      Sign In
                    </Button>
                  </Link>
                )}
                
                <Link href="/favorites">
                  <Button variant="ghost" className="p-2 text-gray-700 hover:text-blue-600">
                    <Heart className="h-5 w-5" />
                  </Button>
                </Link>
              </div>
            </div>
            
            {/* Mobile menu toggle */}
            <div className="md:hidden">
              <Button variant="ghost" size="icon" onClick={toggleMenu} className="text-gray-700">
                {isMenuOpen ? <X className="h-5 w-5" /> : <Menu className="h-5 w-5" />}
              </Button>
            </div>
          </div>
          
          {/* Mobile menu */}
          <AnimatePresence>
            {isMenuOpen && (
              <motion.div
                initial={{ opacity: 0, height: 0 }}
                animate={{ opacity: 1, height: 'auto' }}
                exit={{ opacity: 0, height: 0 }}
                transition={{ duration: 0.2 }}
                className="md:hidden bg-white border-t border-gray-100 overflow-hidden"
              >
                <div className="container mx-auto px-4 py-4">
                  <div className="flex flex-col space-y-4">
                    {navItems.map((item, index) => {
                      // Skip AI Tools dropdown if none of the sections are enabled
                      if (item.isDropdown) {
                        if (!isSectionEnabled('aiTools') && !isSectionEnabled('freeAiTools')) {
                          return null;
                        }
                        return null; // Skip the dropdown item since we have custom handling below
                      }
                      
                      // Regular navigation items
                      return (
                        <Link 
                          key={index} 
                          href={item.path}
                          className={`text-gray-700 font-medium hover:text-blue-600 ${currentPath === item.path ? 'text-blue-600' : ''}`}
                          onClick={toggleMenu}
                        >
                          {item.label}
                        </Link>
                      );
                    })}
                    
                    {/* Mobile AI Tools Section - Only show if sections are enabled */}
                    {(isSectionEnabled('aiTools') || isSectionEnabled('freeAiTools')) && (
                      <div className="pt-2 pb-2 border-t border-gray-100">
                        <div className="font-medium text-sm text-blue-600 mb-3">AI Tools</div>
                        
                        {/* Mobile AI Tools Links - Only show if tool is enabled */}
                        <div className="grid grid-cols-2 gap-3">
                          {/* Document Tools */}
                          {isCategoryEnabled('documentTools') && isToolEnabled('documents') && (
                            <Link href="/tools/documents" className="flex items-center space-x-2 text-gray-700" onClick={toggleMenu}>
                              <FileText className="h-4 w-4 text-purple-500" />
                              <span className="text-sm">Documents</span>
                            </Link>
                          )}
                          
                          {/* Presentations */}
                          {isCategoryEnabled('presentationVisual') && isToolEnabled('presentations') && (
                            <Link href="/tools/presentations" className="flex items-center space-x-2 text-gray-700" onClick={toggleMenu}>
                              <Presentation className="h-4 w-4 text-blue-500" />
                              <span className="text-sm">Presentations</span>
                            </Link>
                          )}
                          
                          {/* Spreadsheets */}
                          {isCategoryEnabled('dataCommunication') && isToolEnabled('spreadsheets') && (
                            <Link href="/tools/spreadsheets" className="flex items-center space-x-2 text-gray-700" onClick={toggleMenu}>
                              <Table className="h-4 w-4 text-green-500" />
                              <span className="text-sm">Spreadsheets</span>
                            </Link>
                          )}
                          
                          {/* Voiceovers */}
                          {isCategoryEnabled('dataCommunication') && isToolEnabled('voiceovers') && (
                            <Link href="/tools/voiceovers" className="flex items-center space-x-2 text-gray-700" onClick={toggleMenu}>
                              <Mic className="h-4 w-4 text-cyan-500" />
                              <span className="text-sm">Voiceovers</span>
                            </Link>
                          )}
                          
                          {/* Images */}
                          {isCategoryEnabled('presentationVisual') && isToolEnabled('images') && (
                            <Link href="/tools/images" className="flex items-center space-x-2 text-gray-700" onClick={toggleMenu}>
                              <ImageIcon className="h-4 w-4 text-indigo-500" />
                              <span className="text-sm">Images</span>
                            </Link>
                          )}
                          
                          {/* Chat */}
                          {isCategoryEnabled('dataCommunication') && isToolEnabled('chat') && (
                            <Link href="/tools/chat" className="flex items-center space-x-2 text-gray-700" onClick={toggleMenu}>
                              <MessageCircle className="h-4 w-4 text-amber-500" />
                              <span className="text-sm">Chat</span>
                            </Link>
                          )}
                          
                          {/* All Free Tools */}
                          {isSectionEnabled('freeAiTools') && (
                            <Link href="/tools" className="flex items-center space-x-2 text-gray-700" onClick={toggleMenu}>
                              <Wand2 className="h-4 w-4 text-teal-500" />
                              <span className="text-sm">Free AI Tools</span>
                            </Link>
                          )}
                        </div>
                      </div>
                    )}
                    
                    {/* Auth buttons for mobile */}
                    <div className="pt-2 border-t border-gray-100">
                      {user ? (
                        <Button 
                          variant="ghost" 
                          onClick={() => {
                            toggleMenu();
                            handleLogout();
                          }} 
                          className="text-gray-700 hover:text-blue-600 p-0"
                        >
                          Logout
                        </Button>
                      ) : (
                        <Link href="/auth" onClick={toggleMenu}>
                          <Button variant="ghost" className="text-gray-700 hover:text-blue-600 p-0">
                            Sign In
                          </Button>
                        </Link>
                      )}
                    </div>
                  </div>
                </div>
              </motion.div>
            )}
        </AnimatePresence>
        </nav>
      )}
      
      {/* Main Content */}
      <main className="flex-1 bg-gray-50">
        {children}
      </main>
      
      {/* Footer */}
      <footer className="bg-white border-t border-gray-200 py-8">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row justify-between">
            <div className="mb-4 md:mb-0">
              <Link href="/" className="font-bold text-xl text-blue-600">
                AI<span className="text-teal-500">Tools</span>Suite
              </Link>
              <p className="mt-2 text-gray-600 text-sm">
                Powerful AI tools to boost your productivity
              </p>
            </div>
            <div className="grid grid-cols-2 md:grid-cols-3 gap-8">
              <div>
                <h3 className="font-medium text-gray-900 mb-2">Company</h3>
                <ul className="space-y-2">
                  <li>
                    <Link href="/about" className="text-gray-600 hover:text-blue-600 text-sm">
                      About Us
                    </Link>
                  </li>
                  <li>
                    <Link href="/blog" className="text-gray-600 hover:text-blue-600 text-sm">
                      Blog
                    </Link>
                  </li>
                  <li>
                    <Link href="/contact" className="text-gray-600 hover:text-blue-600 text-sm">
                      Contact
                    </Link>
                  </li>
                </ul>
              </div>
              <div>
                <h3 className="font-medium text-gray-900 mb-2">Legal</h3>
                <ul className="space-y-2">
                  <li>
                    <Link href="/privacy-policy" className="text-gray-600 hover:text-blue-600 text-sm">
                      Privacy Policy
                    </Link>
                  </li>
                  <li>
                    <Link href="/terms" className="text-gray-600 hover:text-blue-600 text-sm">
                      Terms of Service
                    </Link>
                  </li>
                </ul>
              </div>
            </div>
          </div>
          <div className="mt-8 pt-8 border-t border-gray-200 text-center">
            <p className="text-gray-600 text-sm">
              &copy; {new Date().getFullYear()} AIToolsSuite. All rights reserved.
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Layout;
