import { ReactNode, useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import { 
  FileText, 
  Presentation, 
  Table, 
  Mic, 
  Image as ImageIcon, 
  MessageCircle,
  Bot,
  BookText,
  Terminal,
  ChevronRight,
  Menu,
  X
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";
import Layout from "./Layout";

interface ToolsLayoutProps {
  children: ReactNode;
}

interface ToolItem {
  id: string;
  name: string;
  description: string;
  icon: React.ReactNode;
  path: string;
}

const ToolsLayout = ({ children }: ToolsLayoutProps) => {
  const router = useRouter();
  const currentPath = router.pathname;
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  
  // Define all tool categories
  const toolItems: ToolItem[] = [
    {
      id: 'documents',
      name: 'Documents',
      description: 'Create and edit documents with AI assistance',
      icon: <FileText className="h-5 w-5" />,
      path: "/tools/documents"
    },
    {
      id: 'presentations',
      name: 'Presentations',
      description: 'Create beautiful presentations with AI',
      icon: <Presentation className="h-5 w-5" />,
      path: "/tools/presentations"
    },
    {
      id: 'spreadsheets',
      name: 'Spreadsheets',
      description: 'Create and analyze spreadsheets with AI',
      icon: <Table className="h-5 w-5" />,
      path: "/tools/spreadsheets"
    },
    {
      id: 'voiceovers',
      name: 'Voiceovers',
      description: 'Generate natural-sounding voiceovers',
      icon: <Mic className="h-5 w-5" />,
      path: "/tools/voiceovers"
    },
    {
      id: 'images',
      name: 'Images',
      description: 'Create and edit images with AI',
      icon: <ImageIcon className="h-5 w-5" />,
      path: "/tools/images"
    },
    {
      id: 'chat',
      name: 'Chat',
      description: 'Chat with our AI assistant',
      icon: <MessageCircle className="h-5 w-5" />,
      path: "/tools/chat"
    },
    {
      id: 'ai-text-generator',
      name: 'AI Text Generator',
      description: 'Generate high-quality text content',
      icon: <Terminal className="h-5 w-5" />,
      path: "/tools/ai-text-generator"
    },
    {
      id: 'ai-story-generator',
      name: 'AI Story Generator',
      description: 'Create compelling stories and narratives',
      icon: <BookText className="h-5 w-5" />,
      path: "/tools/ai-story-generator"
    }
  ];
  
  // Find the current active tool
  const currentTool = toolItems.find(tool => currentPath === tool.path);
  
  return (
    <Layout>
      <div className="flex flex-col md:flex-row min-h-[calc(100vh-200px)]">
        {/* Mobile Menu Toggle */}
        <div className="md:hidden p-4 border-b">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <Bot className="h-5 w-5 text-purple-600" />
              <h2 className="font-semibold">{currentTool?.name || "AI Tools"}</h2>
            </div>
            <Button 
              variant="ghost" 
              size="icon" 
              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            >
              {isMobileMenuOpen ? <X className="h-5 w-5" /> : <Menu className="h-5 w-5" />}
            </Button>
          </div>
        </div>
        
        {/* Sidebar - Tools Navigation */}
        <div 
          className={cn(
            "w-full md:w-64 bg-gray-50 border-r overflow-y-auto transition-all duration-300 ease-in-out",
            isMobileMenuOpen ? "max-h-96" : "max-h-0 md:max-h-full hidden md:block"
          )}
        >
          <div className="hidden md:flex items-center p-4 border-b">
            <Bot className="h-5 w-5 text-purple-600 mr-2" />
            <h2 className="font-semibold">AI Tools</h2>
          </div>
          
          <nav className="py-2">
            <ul>
              {toolItems.map((tool) => (
                <li key={tool.id}>
                  <Link 
                    href={tool.path}
                    className={cn(
                      "flex items-center px-4 py-3 text-gray-700 hover:bg-gray-100",
                      currentPath === tool.path && "bg-purple-50 text-purple-700 border-l-4 border-purple-600"
                    )}
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    <span className="mr-3 text-gray-500">{tool.icon}</span>
                    <span className="font-medium">{tool.name}</span>
                    {currentPath === tool.path && <ChevronRight className="ml-auto h-4 w-4 text-purple-600" />}
                  </Link>
                </li>
              ))}
            </ul>
          </nav>
        </div>
        
        {/* Main Content Area */}
        <div className="flex-1 overflow-auto">
          {children}
        </div>
      </div>
    </Layout>
  );
};

export default ToolsLayout;
